[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Julie\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Julie\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Amazon.com Inc. Java 1.8.0_392)
[debug]       Load.loadUnit: plugins took 179.6952ms
[debug]       Load.loadUnit: defsScala took 0.2659ms
[debug] [Loading] Scanning directory C:\Users\Julie\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Julie\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.3722 ms
[debug]           Load.resolveProject(global-plugins) took 45.5554ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Julie\.sbt\1.0\plugins, plugins: List(<none>))) took 85.6971ms
[debug] [Loading] Done in C:\Users\Julie\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 107.9608ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.309ms
[debug]     Load.loadUnit(file:/C:/Users/Julie/.sbt/1.0/plugins/, ...) took 294.3122ms
[debug]   Load.apply: load took 437.450099ms
[debug]   Load.apply: resolveProjects took 6.850801ms
[debug]   Load.apply: finalTransforms took 50.5047ms
[debug]   Load.apply: config.delegates took 7.9625ms
[debug]   Load.apply: Def.make(settings)... took 372.327999ms
[debug]   Load.apply: structureIndex took 90.0157ms
[debug]   Load.apply: mkStreams took 3.212799ms
[info] loading global plugins from C:\Users\Julie\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5905.3517ms
[debug]           Load.loadUnit: plugins took 20.5316ms
[debug]           Load.loadUnit: defsScala took 0.002499ms
[debug] [Loading] Scanning directory C:\Users\Julie\Documents\myFirstScala\project
[debug]             Load.loadUnit: mkEval took 8.417199ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Julie\Documents\myFirstScala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.623 ms
[info] loading settings for project myfirstscala-build from idea.sbt ...
[debug]               Load.resolveProject(myfirstscala-build) took 3.610101ms
[debug]             Load.loadTransitive: finalizeProject(Project(id myfirstscala-build, base: C:\Users\Julie\Documents\myFirstScala\project, plugins: List(<none>))) took 6.733401ms
[debug] [Loading] Done in C:\Users\Julie\Documents\myFirstScala\project, returning: (myfirstscala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2328.514499ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.398499ms
[debug]         Load.loadUnit(file:/C:/Users/Julie/Documents/myFirstScala/project/, ...) took 2354.2902ms
[debug]       Load.apply: load took 2355.913501ms
[debug]       Load.apply: resolveProjects took 0.1824ms
[debug]       Load.apply: finalTransforms took 13.922201ms
[debug]       Load.apply: config.delegates took 0.3704ms
[debug]       Load.apply: Def.make(settings)... took 110.505201ms
[debug]       Load.apply: structureIndex took 18.848101ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\Julie\Documents\myFirstScala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4330.7892ms
[debug]     Load.loadUnit: defsScala took 0.003201ms
[debug] [Loading] Scanning directory C:\Users\Julie\Documents\myFirstScala
[debug]       Load.loadUnit: mkEval took 0.4238ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.262 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 39.8175ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Julie\Documents\myFirstScala, plugins: List(<none>))) took 44.2029ms
[debug] [Loading] Done in C:\Users\Julie\Documents\myFirstScala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1251.421299ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.554299ms
[debug]   Load.loadUnit(file:/C:/Users/Julie/Documents/myFirstScala/, ...) took 5591.616701ms
[debug] Load.apply: load took 5594.5072ms
[debug] Load.apply: resolveProjects took 0.4992ms
[debug] Load.apply: finalTransforms took 34.438199ms
[debug] Load.apply: config.delegates took 0.4108ms
[debug] Load.apply: Def.make(settings)... took 90.7275ms
[debug] Load.apply: structureIndex took 17.1138ms
[debug] Load.apply: mkStreams took 0.002299ms
[info] set current project to untitled (in build file:/C:/Users/Julie/Documents/myFirstScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61953 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61953, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled (in build file:/C:/Users/Julie/Documents/myFirstScala/)
[debug] > Exec(idea-shell, None, None)
